{"remainingRequest":"/home/runner/work/biome-text/biome-text/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/biome-text/biome-text/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/runner/work/biome-text/biome-text/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/home/runner/work/biome-text/biome-text/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/runner/work/biome-text/biome-text/docs/docs/api/biome/text/README.md?vue&type=template&id=3208dcfb&","dependencies":[{"path":"/home/runner/work/biome-text/biome-text/docs/docs/api/biome/text/README.md","mtime":1607685039930},{"path":"/home/runner/work/biome-text/biome-text/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/biome-text/biome-text/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/biome-text/biome-text/docs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/biome-text/biome-text/docs/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/biome-text/biome-text/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}